#!/bin/bash -x
#
# Compare BBFM models by plotting loss v Eq/No (and C/NO and SNR) curves generated by train_bbfm.py

# Run through training dataset on each trained model to build loss versus Eq/No curve
function run_model() {
    model=$1
    dim=$2
    epoch=$3
    chan=$4
    shift
    shift
    shift
    shift
    python3 ./train_bbfm.py --cuda-visible-devices 0 --sequence-length 400 --batch-size 512 --latent-dim ${dim} \
        --epochs 1 --lr 0.003 --lr-decay-factor 0.0001 \
        ~/Downloads/tts_speech_16k_speexdsp.f32 tmp \
        --range_RdBm --plot_R ${model}_${chan} --initial-checkpoint ${model}/checkpoints/checkpoint_epoch_${epoch}.pth $@
}

#run_model model_bbfm_01 80 100 awgn
#run_model 250319_bbfm 80 100 awgn
#run_model 250319_bbfm_lmr60 80 100 awgn
#run_model model_bbfm_01 80 100 lmr60 --h_file h_lmr60_train.f32
#run_model 250319_bbfm 80 100 lmr60 --h_file h_lmr60_train.f32
#run_model 250319_bbfm_lmr60 80 100 lmr60 --h_file h_lmr60_train.f32
#run_model 250319_bbfm_lmr60 80 100 lmr30 --h_file h_lmr30_train.f32
#run_model 250319_bbfm_lmr60 80 100 lmr120 --h_file h_lmr120_train.f32

plot="250402"

if [ $plot == "250402" ]; then
  model_list='250319_bbfm_lmr60_awgn 250319_bbfm_lmr60_lmr60 250319_bbfm_lmr60_lmr30 250319_bbfm_lmr60_lmr120'
  declare -a model_legend=("AWGN" "lmr60" "lmr30" "lmr120")
fi

# Generate the plots in PNG and EPS form, file names have suffix of ${plot}

loss_R=""
i=0;
for model in $model_list
  do
    loss_R="${loss_R},'${model}_loss_RdBm.txt','${model_legend[i]}'"
    ((i++))
  done
echo "radae_plots; loss_RdBm_plot('${plot}_loss_RdBm_models',''${loss_R}); quit" | octave-cli -qf  # PNG
echo "radae_plots; loss_RdBm_plot('','${plot}_loss_R_models'${loss_R}); quit" | octave-cli -qf     # EPS


